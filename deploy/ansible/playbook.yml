- hosts: vms
  tasks:
    - name: Install Certificates
      apt:
        name: 
          - ca-certificates 
          - curl
        state: present
        update_cache: true

    - name: Ensure /etc/apt/keyrings directory exists with correct permissions
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"
      become: true

    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"
      become: true

    - name: Add Docker APT repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] \
        https://download.docker.com/linux/debian $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" > /etc/apt/sources.list.d/docker.list
      become: true

    - name: Install Docker and related packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
          - docker-compose
        state: present
        update_cache: true
      become: true

    - name: Copy docker-compose.yml to remote host
      copy:
        src: ../../docker-compose.yaml
        dest: /docker-compose.yaml
        mode: "0644"
      become: true

    - name: Copy prometheus.yaml to remote host
      copy:
        src: ../../prometheus.yaml
        dest: /prometheus.yaml
        mode: "0644"
      become: true

    - name: Copy test_config.json to remote host
      copy:
        src: ../../test_config.json
        dest: /test_config.json
        mode: "0644"
      become: true

    - name: Copy api key to remote host
      copy:
        src: "{{ lookup('env', 'API_KEY_PATH') }}"
        dest: /api_key
        mode: "0644"
      become: true

    - name: Copy api secret to remote host
      copy:
        src: "{{ lookup('env', 'SECRET_KEY_PATH') }}"
        dest: /api_secret
        mode: "0644"
      become: true

    - name: Log into DockerHub
      community.docker.docker_login:
        username: radasam
        password: "{{ lookup('env', 'DOCKER_TOKEN') }}"

    - name: compose up
      community.docker.docker_compose:
        project_src: .
      register: output
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        AWS_DEFAULT_REGION: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"

    - name: Log out from DockerHub
      community.docker.docker_login:
        state: absent